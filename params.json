{"name":"Next","tagline":"A combinatorics package for Go ","body":"# Welcome\r\n[![GoDoc](https://godoc.org/gopkg.in/klaidliadon/next.v1?status.svg)](https://godoc.org/gopkg.in/klaidliadon/next.v1)\r\n[![Build Status](https://travis-ci.org/klaidliadon/next.svg?branch=master)](https://travis-ci.org/klaidliadon/next) \r\n[![codecov.io](http://codecov.io/github/klaidliadon/next/coverage.svg?branch=master)](http://codecov.io/github/klaidliadon/next?branch=master)\r\n\r\nThe package calculates asynchronously combinations and permutations of a collection of values.\r\n\r\nTo add the package recommended:\r\n\r\n\tgo get gopkg.in/klaidliadon/next.v1\r\n\r\n## Functionalities\r\n\r\n- Combinations\r\n- Combinations with repetitions\r\n- Permutations\r\n- Permutations with repetitions\r\n\r\n## Usage\r\n\r\nJust use create a new channel using `Combination()` or `Permutation()` and receive the results.\r\n\r\n\tpackage main\r\n\t\r\n\timport (\r\n\t\t\"fmt\"\r\n\t\t\"github.com/klaidliadon/next\"\r\n\t)\r\n\t\r\n\tfunc main() {\r\n\t\tfor v := range next.Combination([]interface{1,2,3,4}, 2, true) {\r\n\t\t\tfmt.Println(v)\r\n\t\t}\r\n\t}\r\n\r\nProduces\r\n\r\n\t[1 1]\r\n\t[1 2]\r\n\t[1 3]\r\n\t[1 4]\r\n\t[2 2]\r\n\t[2 3]\r\n\t[2 4]\r\n\t[3 3]\r\n\t[3 4]\r\n\t[4 4]\r\n\r\n##Roadmap\r\n\r\nThe 4 main cases of combinatronics are covered:\r\n \r\n- [x] Combinations\r\n- [x] Combinations with repetitions\r\n- [x] Permutations\r\n- [x] Permutations with repetitions\r\n\r\nThe future updates will improve performance and memory usage.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}